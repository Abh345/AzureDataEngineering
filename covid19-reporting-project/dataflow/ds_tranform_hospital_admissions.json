{
	"name": "ds_tranform_hospital_admissions",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_hospital_admission",
						"type": "DatasetReference"
					},
					"name": "HospitalAdmisssionSource"
				},
				{
					"dataset": {
						"referenceName": "ds_country_lookup",
						"type": "DatasetReference"
					},
					"name": "CountryLookUp"
				},
				{
					"dataset": {
						"referenceName": "ds_dim_date_lookup",
						"type": "DatasetReference"
					},
					"name": "DimDateSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_processed_hospital_admission_weekly",
						"type": "DatasetReference"
					},
					"name": "WeeklySink"
				},
				{
					"dataset": {
						"referenceName": "ds_processed_hospital_admission_daily",
						"type": "DatasetReference"
					},
					"name": "DailySink"
				}
			],
			"transformations": [
				{
					"name": "SelectOnlyRequiredFields"
				},
				{
					"name": "LookUpCountry"
				},
				{
					"name": "SelectOnlyRequiredFields2"
				},
				{
					"name": "SplitDailyFromWeekly"
				},
				{
					"name": "DerivedECDCYearWeek"
				},
				{
					"name": "AggDimDate"
				},
				{
					"name": "JoinWithDate"
				},
				{
					"name": "PivotDailyCounts"
				},
				{
					"name": "PivotWeeklyCount"
				},
				{
					"name": "SortDaily"
				},
				{
					"name": "SortWeekly"
				},
				{
					"name": "SelectWeekly"
				},
				{
					"name": "SelectDaily"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as double,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> HospitalAdmisssionSource",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CountryLookUp",
				"source(output(",
				"          date_key as string,",
				"          date as date,",
				"          year as short,",
				"          month as short,",
				"          day as short,",
				"          day_name as string,",
				"          day_of_year as short,",
				"          week_of_month as short,",
				"          week_of_year as short,",
				"          month_name as string,",
				"          year_month as integer,",
				"          year_week as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DimDateSource",
				"HospitalAdmisssionSource select(mapColumn(",
				"          country,",
				"          indicator,",
				"          reported_date = date,",
				"          reported_year_week = year_week,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectOnlyRequiredFields",
				"SelectOnlyRequiredFields, CountryLookUp lookup(SelectOnlyRequiredFields@country == CountryLookUp@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LookUpCountry",
				"LookUpCountry select(mapColumn(",
				"          country = SelectOnlyRequiredFields@country,",
				"          indicator,",
				"          reported_date,",
				"          reported_year_week,",
				"          value,",
				"          source,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectOnlyRequiredFields2",
				"SelectOnlyRequiredFields2 split(indicator=='Daily hospital occupancy' || indicator=='Daily ICU occupancy',",
				"     disjoint: false) ~> SplitDailyFromWeekly@(Daily, Weekly)",
				"DimDateSource derive(ecdc_reported_year_week = iif(length(toString(week_of_year))==1,toString(year)+'-'+'W0'+toString(week_of_year), toString(year)+'-'+'W'+toString(week_of_year))) ~> DerivedECDCYearWeek",
				"DerivedECDCYearWeek aggregate(groupBy(ecdc_reported_year_week),",
				"     week_start_date = toDate(toString(min(date),'dd-MM-yyyy'),'dd-MM-yyyy'),",
				"          week_end_date = toDate(toString(max(date),'dd-MM-yyyy'),'dd-MM-yyyy')) ~> AggDimDate",
				"AggDimDate, SplitDailyFromWeekly@Weekly join(ecdc_reported_year_week == reported_year_week,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinWithDate",
				"SplitDailyFromWeekly@Daily pivot(groupBy(country,",
				"          reported_date,",
				"          reported_year_week,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          source),",
				"     pivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),",
				"     daily_count = sum(value),",
				"     columnNaming: '$N_$V',",
				"     lateral: true) ~> PivotDailyCounts",
				"JoinWithDate pivot(groupBy(country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          reported_year_week,",
				"          source,",
				"          population,",
				"          week_start_date,",
				"          week_end_date),",
				"     pivotBy(indicator, ['Weekly new hospital admissions per 100k', 'Weekly new ICU admissions per 100k']),",
				"     count = sum(value),",
				"     columnNaming: '$N_$V',",
				"     lateral: true) ~> PivotWeeklyCount",
				"PivotDailyCounts sort(desc(reported_date, true),",
				"     asc(country, true)) ~> SortDaily",
				"PivotWeeklyCount sort(desc(reported_year_week, true),",
				"     asc(country, true)) ~> SortWeekly",
				"SortWeekly select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_year_week,",
				"          reported_week_start_date = week_start_date,",
				"          reported_week_end_date = week_end_date,",
				"          new_hospital_occupancy_count = {count_Weekly new hospital admissions per 100k},",
				"          new_icu_occupancy_count = {count_Weekly new ICU admissions per 100k},",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectWeekly",
				"SortDaily select(mapColumn(",
				"          country,",
				"          reported_date,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          {hospital occupancy_count} = {daily_count_Daily hospital occupancy},",
				"          icu_occupancy_count = {daily_count_Daily ICU occupancy},",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectDaily",
				"SelectWeekly sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> WeeklySink",
				"SelectDaily sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DailySink"
			]
		}
	}
}